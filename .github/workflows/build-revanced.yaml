name: Build Revanced

run-name: Build Revanced task initiated by ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      apk:
        description: 'URL for raw YouTube APK for patching'
        required: true
        type: string
      exclude:
        description: 'List of patch names to exclude, seperated by commas (not space sensitive)'
        required: false
        type: string
      include:
        description: 'List of patch names to include, if omitted, include all patches (that is not in exclude list), seperated by commas (not space sensitive)'
        required: false
        type: string
      exclusive:
        description: 'Only apply patches in included list.'
        required: false
        type: boolean
        default: false
      integrations:
        description: 'Include integrations'
        required: false
        type: boolean
        default: false
      root:
        description: 'If enabled, excludes the microg-support patch.'
        required: false
        type: boolean
        default: false

jobs:
  main:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    steps:
      - name: 'Install OpenJDK'
        run: sudo apt -y install openjdk-17-jdk
      - name: 'Get latest release of Revanced CLI'
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: revanced/revanced-cli
        id: cli
      - name: 'Get latest release of Revanced Patches'
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: revanced/revanced-patches
        id: patches
      - name: 'Get latest release of Revanced Integrations'
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: revanced/revanced-integrations
        id: integrations
      - name: 'Download Revanced Binaries'
        run: |
          echo 'Fetching Revanced CLI ${{ step.cli.outputs.release }}'
          curl https://github.com/revanced/revanced-cli/releases/download/${{ step.cli.outputs.release }}/revanced-cli-$(echo ${{ step.cli.outputs.release }} | sed "s/^v//")-all.jar -o revanced-cli.jar
          echo 'Fetching Revanced Patches ${{ step.patches.outputs.release }}'
          curl https://github.com/revanced/revanced-patches/releases/download/${{ step.patches.outputs.release }}/revanced-patches-$(echo ${{ step.patches.outputs.release }} | sed "s/^v//").jar -o revanced-patches.jar
          echo 'Fetching Revanced Integrations ${{ step.integrations.outputs.release }}'
          curl https://github.com/revanced/revanced-integrations/releases/download/${{ step.integrations.outputs.release }}/app-release-unsigned.apk -o integrations.apk
      - name: 'Download base YouTube APK'
        run: curl ${{ inputs.apk }} -o base.apk
      - name: 'Set base command'
        run: echo "COMMAND='java -jar revanced-cli.jar -a youtube.apk -c -b revanced-patches.jar -o revanced.apk'" >> $GITHUB_ENV
      - name: 'Set root status'
        if: ${{ inputs.root == true }}
        run: |
          NEW_COMMAND='$COMMAND -e microg-support'
          echo "COMMAND=$NEW_COMMAND" >> $GITHUB_ENV
      - name: 'Set excludes'
        if: ${{ inputs.exclude != '' }}
        run: |
          EXCLUDE_LIST=echo ${{ inputs.exclude }} | sed 's/\s//g; s/^/-e /; s/,/ -e /g'
          NEW_COMMAND='$COMMAND $EXCLUDE_LIST'
          echo "COMMAND=$NEW_COMMAND" >> $GITHUB_ENV
      - name: 'Set includes'
        if: ${{ inputs.include != '' }}
        run: |
          INCLUDE_LIST+=echo ${{ inputs.include }} | sed 's/\s//g; s/^/-i /; s/,/ -i /g'
          NEW_COMMAND='$COMMAND $INCLUDE_LIST'
          echo "$COMMAND=$NEW_COMMAND" >> $GITHUB_ENV
      - name: 'Set exclusive'
        if: ${{ inputs.exclusive == true }}
        run: |
          NEW_COMMAND='$COMMAND --exclusive '
          echo "COMMAND=$NEW_COMMAND" >> $GITHUB_ENV
      - name: 'Set integrations'
        if: ${{ inputs.integrations == true }}
        run: |
          NEW_COMMAND='$COMMAND -m integrations.apk'
          echo "COMMAND=$NEW_COMMAND" >> $GITHUB_ENV
      - name: 'Build Revanced'
        run: $COMMAND
      - name: 'Upload to Releases'
        uses: softprops/action-gh-release@v1
        with:
          files: revanced.apk
          name: Revanced APK built at ${{ steps.var.outputs.date }} by ${{ steps.var.outputs.git_username }}
          tag_name: ${{ github.run_id }}
          body: Revanced APK built by ${{ steps.var.outputs.git_username }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
